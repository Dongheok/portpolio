{"version":3,"sources":["data/main/index.jsx","data/layout/index.jsx","config/index.js","data/profile/index.jsx","data/project/index.jsx","context/index.jsx","theme/index.jsx","components/loading-bar/styles.jsx","components/loading-bar/index.jsx","pages/styles.jsx","pages/index.jsx","components/layout/styles.jsx","components/layout/index.jsx","pages/project/styles.jsx","pages/project/index.jsx","common/index.jsx","pages/profile/styles.jsx","pages/profile/index.jsx","Routes.jsx","App.jsx","index.js"],"names":["mainData","btn_wrap","key","value","layoutData","nav","imgUrl","profileData","picture_data","skill_data","keyword","lang","color","explanation","history_data","years","history","certificate_data","title","date","img","contact_data","link","projectData","main_project_data","project_title","project_text_1","project_text_2","git","speed","loading","sub_project_data","UserContext","createContext","UserContextProvider","children","useState","isLoading","modeDark","sidebar","state","setState","Provider","modeDarkFunction","boolen","isLoadingFunction","theme","bg","main","black","white","img_mask","shadow","main_bg","main_color","darkTheme","loadingLeft","keyframes","loadingRight","Wrapper","styled","div","props","LoadingBar","className","Grid","container","item","Portpolio","useContext","useHistory","wrapRef","useRef","containerRef0","messageARef0","messageBRef0","messageCRef0","messageDRef0","containerRef1","messageARef1","messageBRef1","logoRef1","ribbonPathRef1","containerRef2","sceneInfo","type","heightNum","scrollHeight","objs","messageA","messageB","messageC","messageD","values","messageA_opacity_in","start","end","messageA_translateY_in","messageA_opacity_out","messageA_translateY_out","messageB_opacity_in","messageB_translateY_in","messageB_opacity_out","messageB_translateY_out","messageC_opacity_in","messageC_translateY_in","messageC_opacity_out","messageC_translateY_out","messageD_opacity_in","messageD_translateY_in","messageD_opacity_out","messageD_translateY_out","logo","ribbonPath","logo_width_in","logo_width_out","logo_translateX_in","logo_translateX_out","logo_opacity_out","path_dashoffset_in","path_dashoffset_out","useEffect","wrap","current","prevScrollHeight","currentScene","enterNewScene","setLayout","i","length","window","innerHeight","style","height","totalScrollHeight","pageYOffset","setAttribute","calcValues","currentYOffset","result","scrollRatio","partScrollStart","partScrollEnd","scrollLoop","opacity","transform","background","width","strokeDashoffset","playAnimation","addEventListener","setTimeout","removeEventListener","ref","data","id","xmlns","viewBox","d","alignItems","spacing","map","x","xs","sm","onClick","push","scrollTo","href","target","rel","Layout","setModeDark","onClickLogo","useCallback","onClickNav","onClickDarkMode","justify","src","alt","SkeletonWrap","margin","padding","Mask","bgUrl","MainProjectComponent","setMainLoading","mainProjectData","setMainProjectData","mainProjectDelay","setMainProjectDelay","index","onLoadBg","tempData","Skeleton","variant","animation","icon","faLink","SubProjectComponent","mainLoading","subProjectData","setSubProjectData","subProjectDelay","setSubProjectDelay","md","Project","Helmet","kakao","MapApiComponent","mapRef","options","center","maps","LatLng","level","markerPosition","marker","Marker","position","Map","InfoWindow","content","open","setMap","FnText","css","SkillItem","settings","dots","arrows","infinite","slidesToShow","slidesToScroll","swipeToSlide","AboutComponent","direction","SkillComponent","EducationComponent","CareerComponent","v","ContactComponent","onClickLink","location","Profile","Routes","basename","path","exact","component","from","to","GlobalStyle","createGlobalStyle","overflow","App","themeMode","useMemo","isOverflow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb4b8ec.chunk.js","sourcesContent":["export const mainData = {\n    // 메인 버튼 데이터\n    btn_wrap: [\n        { key: '/profile', value: 'Profile' },\n        { key: '/project', value: 'Project' },\n        { key: '/git', value: 'Git' },\n    ],\n};\n","export const layoutData = {\n    // 사이드 바\n    nav: [\n        { key: '/profile', value: 'Profile' },\n        { key: '/project', value: 'Project' },\n    ],\n};\n","export const imgUrl = 'http://sn237x.cafe24.com/web/portpolio_img';\r\n","import { imgUrl } from 'config';\n\nexport const profileData = {\n    // 프로필\n    //  - 사진 데이터\n    picture_data: [\n        {\n            key: 0,\n            value: `${imgUrl}/profile/profile_picture_1.jpg`,\n        },\n        {\n            key: 1,\n            value: `${imgUrl}/profile/profile_picture_2.jpg`,\n        },\n        {\n            key: 2,\n            value: `${imgUrl}/profile/profile_picture_3.jpg`,\n        },\n    ],\n    //  - 스킬 데이터\n    skill_data: [\n        {\n            keyword: 'HM',\n            lang: 'HTML5',\n            color: 'red',\n            explanation: 'HTML5 시맨틱 태그, 메타 태그 등 기본문법을 이해하고 웹 표준에 맞춰 작업이 가능합니다.',\n        },\n        {\n            keyword: 'CS',\n            lang: 'CSS',\n            color: 'yellow',\n            explanation: 'CSS의 기초를 이해하며, 어떤 디자인 시안이 와도 CSS3를 이용하여 100% 퀄리티로 구현할 수 있습니다.',\n        },\n        {\n            keyword: 'SC',\n            lang: 'SCSS',\n            color: 'green',\n            explanation: 'SCSS의 변수, Nesting, Mixin등 기초를 이해하며, SCSS를 이용하여 코드의 재사용성을 높이고 가독성이 높은 CSS를 작성할 수 있습니다.',\n        },\n        {\n            keyword: 'JS',\n            lang: 'Javascript',\n            color: 'blue',\n            explanation: 'Javascript 언어의 기본문법과 함수, 객체, 스코프, 실행환경, 클로저, 이벤트 등의 개념을 이해하며, 동적인 프로그래밍을 할 수 있습니다.',\n        },\n        {\n            keyword: 'E6',\n            lang: 'ES6+',\n            color: 'red',\n            explanation:\n                'ES6의 let, const, 스프레드 연산자, Arrow Function 등 기초를 이해하며, map/filter/reduce, 파이프라인, 제너레이터를 통한 지연 평가, Promise 합성, 동시성/병렬성, async/await와 비동기 에러 핸들링를 이용해 이터러블/이터레이터/제너레이터 프로토콜을 응용하여 ES6의 함수형 프로그래밍을 한 경험이 있습니다.',\n        },\n        {\n            keyword: 'JQ',\n            lang: 'Jquery',\n            color: 'yellow',\n            explanation:\n                'Jquery의 기초를 이해하며, CSS 스타일의 Selector을 이용한 DOM API를 이용하여 이벤트 처리나 애니메이션 효과를 유연하게 다룰 수 있다. Jquery를 이용하여 반응형 정적 페이지 배포한 경험이 있습니다.',\n        },\n        {\n            keyword: 'NJ',\n            lang: 'Node Js',\n            color: 'green',\n            explanation: 'Node JS의 기초을 이해하며, Node JS를 이용하여 프론트엔드 개발환경을 구축할 수 있습니다.',\n        },\n        {\n            keyword: 'EX',\n            lang: 'Express',\n            color: 'blue',\n            explanation: 'Express환경을 구축하고 시퀄라이저를 이용해 MySQL과 연동하여 서버를 구축하고 트위터 클론을 구현한 경험이 있습니다.',\n        },\n        {\n            keyword: 'WP',\n            lang: 'Webpack',\n            color: 'red',\n            explanation: '웹팩의 동작 원리를 이해하고 기초를 이해하며, 로더를 직접 구현해 본 경험이 있습니다.',\n        },\n        {\n            keyword: 'BB',\n            lang: 'Babel',\n            color: 'yellow',\n            explanation: '바벨의 원리를 이해하고 기초를 이해하며, 직접 바벨을 사용해 프로젝트에 최적화된 환경을 구축해 본 경험이 있습니다.',\n        },\n        {\n            keyword: 'RC',\n            lang: 'React',\n            color: 'green',\n            explanation: 'React를 이용하여 정적페이지, CMS페이지, 플랫폼 등 여러 React 프로젝트를 구현한 경험이 있습니다.',\n        },\n        {\n            keyword: 'RD',\n            lang: 'Redux',\n            color: 'blue',\n            explanation:\n                'Redux를 이용하여 효율적으로 형상관리를 할 수 있고, Redux-saga를 이용하여 서버에 요청을 보내어 성공하면 Redux에 적용합니다. 서버에 요청함과 동시에 사용자에게는 빠르게 결과를 보여줄 수 있습니다.',\n        },\n        {\n            keyword: 'TS',\n            lang: 'Typescript',\n            color: 'red',\n            explanation: 'Typescript 기초를 이해하며, React와 Typescript를 사용하여 반응형 영화 웹 애플리케이션 만들어 배포한 경험이 있습니다.',\n        },\n        {\n            keyword: 'NJ',\n            lang: 'Next Js',\n            color: 'yellow',\n            explanation: 'Next JS를 이용하여 SEO가 된 반응형 정적 페이지와 사용자와 상호작용하는 웹 어플리케이션을 구현하여 배포한 경험이 있습니다.',\n        },\n        {\n            keyword: 'ST',\n            lang: 'Styled components',\n            color: 'green',\n            explanation: 'React 프로젝트를 진행할 때 주로 Styled Component를 사용해 보다 효율적으로 CSS를 작성합니다.',\n        },\n        {\n            keyword: 'MU',\n            lang: 'Material UI',\n            color: 'blue',\n            explanation: 'React 프로젝트를 진행할 때 주로 Material UI 프레임워크 사용하여 효율적으로 컴포넌트를 구현합니다.',\n        },\n        {\n            keyword: 'RW',\n            lang: 'Responsive Web',\n            color: 'red',\n            explanation: 'CSS를 직접 작성하여 반응형 웹 페이지를 구현한 경험이 있습니다.',\n        },\n        {\n            keyword: 'IW',\n            lang: 'Interactive Web',\n            color: 'yellow',\n            explanation: 'HTML5, CSS, Javascript를 이용하여 인터렉티브 웹 페이지를 구현한 경험이 있습니다.',\n        },\n        {\n            keyword: 'WS',\n            lang: 'Web Standards',\n            color: 'green',\n            explanation: '웹 표준 이해하며, 웹 표준을 지키며 프로젝트를 구현하여 W3C 웹표준 검사기에 통과한 경험이 있습니다.',\n        },\n        {\n            keyword: 'CB',\n            lang: 'Cross Browsing',\n            color: 'blue',\n            explanation: '진행하는 프로젝트가 웹 프로젝트를 모든 브라우저에서 크로스 브라우징이 잘 되게 구현한 경험이 있습니다.',\n        },\n        {\n            keyword: 'GT',\n            lang: 'Git',\n            color: 'red',\n            explanation: 'Git을 이용하여 형상관리를 한 경험이 있습니다.',\n        },\n        {\n            keyword: 'JR',\n            lang: 'Jira',\n            color: 'yellow',\n            explanation: '칸반과 스크럼을 이해하며, 애자일 방법론 기반의 프로젝트 관리 도구 Jira를 설명하는 PPT를 만들어 발표한 경험이 있고, Jira를 이용하여 프로젝트 관리를 할 수 있습니다.',\n        },\n        {\n            keyword: 'PS',\n            lang: 'Photoshop',\n            color: 'green',\n            explanation: '포토샵을 이용하여 홈페이지를 리뉴얼 웹 페이지 시안를 직접 디자인한 경험이 있습니다.',\n        },\n        {\n            keyword: 'IL',\n            lang: 'Illustrator',\n            color: 'blue',\n            explanation: '일러스트를 이용하여 간단한 아이콘, 로고 등을 만들어 사용한 경험이 있습니다.',\n        },\n    ],\n    //  - 커리어 데이터\n    history_data: [\n        { years: '# 2018', history: ['송곡고등학교 졸업'] },\n        {\n            years: '# 2019',\n            history: [\n                '이젠컴퓨터학원(상봉) - 하이브리드 UI UI 웹 퍼블리셔 교육 이수',\n                'SV GROUP 입사',\n                'SV VIBA Web 반응형 정적페이지 리뉴얼 개발',\n                'SSAFY Web UI 구현',\n                'PION Event Web 페이지 디자인 후 UI 구현',\n            ],\n        },\n        {\n            years: '# 2020',\n            history: [\n                'SV DATA Web 반응형 정적페이지 개발',\n                'XY Web 반응형 정적페이지 개발',\n                'ShuttleB CMS 프론트엔드 개발',\n                '에그플레너 Web 반응형 정적페이지 개발',\n                'PlayJoker Web 프론트엔드 개발',\n                '손사찾기 Web 반응형 정적페이지 프론트엔드 개발',\n                'SSAFY CMS 프론트엔드 개발',\n                '동네선수 CMS 프론트엔드 개발',\n                '배달의딜러 CMS 프론트엔드 개발',\n                '플레이조커 CMS UI 구현',\n            ],\n        },\n    ],\n    //  - 자격증 데이터\n    certificate_data: [\n        {\n            title: '웹디자인 기능사',\n            date: '2019.09',\n            img: `${imgUrl}/profile/design_icon.png`,\n        },\n        {\n            title: '정보처리 기능사',\n            date: '2020.07',\n            img: `${imgUrl}/profile/code_icon.png`,\n        },\n    ],\n    //  - 문의하기 데이터\n    contact_data: [\n        { key: 'Phone', value: '010-4888-0330' },\n        { key: 'Email', value: 'piouy_@naver.com' },\n        { key: 'Git', value: 'https://github.com/dev-donghyuk', link: 'https://github.com/dev-donghyuk' },\n        {\n            key: 'Notion',\n            value: 'https://www.notion.so/Donghyuk-Kim-6585ae54500946daa55004efbdea71c6',\n            link: 'https://www.notion.so/Donghyuk-Kim-6585ae54500946daa55004efbdea71c6',\n        },\n    ],\n};\n","import { imgUrl } from 'config';\n\nexport const projectData = {\n    // 프로젝트\n    //  - 메인 프로젝트\n    main_project_data: [\n        {\n            project_title: 'Donflix',\n            project_text_1: '사용언어 : TypeScript, React, Redux, Axios, Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 최신, 인기, 공개 예정인 영화와 TV프로그램의 포스터, 별점, 영화 정보, 검색기능, 영화페이지 링크, 유튜브 영화 예고편까지 한 눈에 볼 수 있는 반응형 영화 웹 사이트입니다. 프로젝트를 하는과정에서 검색 페이지에서 검색 후 새로고침을 하거나 뒤로가기를 해도 history를 저장하여 가져올 수 있게 되었고, React 환경에서의 Typescript를 접목시킨 첫 오픈 API를 이용한 React + TypeScript 프로젝트입니다.`,\n            img: `${imgUrl}/project/project_dongflix.png`,\n            link: 'https://dev-donghyuk.github.io/dongflix/',\n            git: 'https://github.com/dev-donghyuk/dongflix',\n            speed: 20,\n            loading: true,\n        },\n    ],\n    //  - 서브 프로젝트\n    sub_project_data: [\n        // 배달의딜러CMS\n        {\n            project_title: '배달의딜러 CMS',\n            project_text_1: '사용언어 : React, Redux, Axios, Styled-Components, Material-UI',\n            project_text_2:\n                '[\"사용언어\"]를 이용하여 구현한 비대면 중고차 플랫폼 앱 서비스 관리자 페이지 입니다. 프로젝트를 하는 과정에서 엠플리파이 환경세팅 없이 로그인 기능을 구현할 수 있었고, React Route의 NavLink를 이용하여 레이아웃의 사이드바 UI를 보다 효율적으로 처리할 수 있게 되었으며, Axios Interceptor를 이용하여 더 똑똑하게 통신처리를 할 수 있게 되었습니다.',\n            img: `${imgUrl}/project/project_delivery.png`,\n            link: '',\n            git: '',\n            speed: 20,\n            loading: true,\n        },\n        // 동네선수CMS\n        {\n            project_title: '동네선수 CMS',\n            project_text_1: '사용언어 : React, Redux, Axios, Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 스포츠 모임 앱 서비스 관리자 페이지 입니다. 프로젝트를 하는 과정에서 이미지 업로드, 다음 주소 API로 가져온 주소를 카카오주소 API를 이용하여 주소의 위,경도를 가져오기, 컴포넌트 분리, Redux를 이용하여 사용자가 등록, 수정, 삭제를 했을 시 새로고침 없이 반영시키기 등등 React를 보다 더 똑똑하게 사용할 수 있게 되었습니다.`,\n            img: `${imgUrl}/project/project_plant.png`,\n            link: '',\n            git: '',\n            speed: 20,\n            loading: true,\n        },\n        // SSAFY CMS\n        {\n            project_title: 'SSAFY CMS',\n            project_text_1: '사용언어 : React, Axios, Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 삼성 청년 SW 아카데미에서 외주를 받은 투표 서비스 플랫폼의 관리자 페이지입니다. 프로젝트를 하는 과정에서 투표 플랫폼의 데이터를 통신하여 가져온 후, 그래프 라이브러리 Recharts를 이용하여 데이터 통계 UI를 구현할 수 있었고 테이블UI를 컴포넌트화하여 더 유연하게 커스터 마이징 할 수 있게 되었습니다..`,\n            img: `${imgUrl}/project/project_ssafy_cms.png`,\n            link: '',\n            git: '',\n            speed: 20,\n            loading: true,\n        },\n        // SHUTTLEB\n        {\n            project_title: 'SHUTTLEB CMS',\n            project_text_1: '사용언어 : React, Redux, Axios Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 서버와 통신하는 첫 동적 페이지인 학원 통학 서비스앱 서비스 관리자 페이지입니다. 프로젝트를 하는 과정에서 동기/비동기, Redux, 공통 UI 컴포넌트화, To Do List 구현을 할 수 있게 되었습니다.`,\n            img: `${imgUrl}/project/project_shuttleb.png`,\n            link: '',\n            git: '',\n            speed: 20,\n            loading: true,\n        },\n        // 손사찾기\n        {\n            project_title: '손사찾기',\n            project_text_1: '사용언어 : React, Next.js, Styled-Components, Material-UI,',\n            project_text_2:\n                'Next.js를 이용하여 구현한 반응형 손해사정사 페이지입니다. 프로젝트를 하는 과정에서 이메일 서비스를 구현과 SEO(검색 엔진 최적화)를 하고 서버 사이드 렌더링 방식을 이해해 Next.js를 이용하여 React 프로젝트에서 서버 사이드 렌더링을 할 수 있게 되었습니다.',\n            img: `${imgUrl}/project/project_sonsa.png`,\n            link: 'https://www.sonsafind.com',\n            git: '',\n            speed: 30,\n            loading: true,\n        },\n        // SSAFY\n        {\n            project_title: 'SSAFY',\n            project_text_1: '사용언어 : React, Styled-Components, Material-UI',\n            project_text_2: `페이지에 전체적인 UI를 [\"사용언어\"]를 이용하여 구현한 삼성 청년 SW 아카데미에서 외주를 받은 투표 서비스 플랫폼입니다. 프로젝트를 하는 과정에서 React환경에서의 퀄리티 있는 UI 구현능력을 더 키울 수 있게 되었습니다.`,\n            img: `${imgUrl}/project/project_ssafy.png`,\n            link: '',\n            git: '',\n            speed: 20,\n            loading: true,\n        },\n        // XY\n        {\n            project_title: 'XY',\n            project_text_1: '사용언어 : React, Gatsby, Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용한 반응형 성소수자 데이팅 애플리케이션 웹 페이지입니다. 프로젝트를 하는 과정에서 React환경의 State와 Props의 대해 이해하였습니다.`,\n            img: `${imgUrl}/project/project_xy.png`,\n            link: 'https://www.xydating.app/',\n            git: '',\n            speed: 30,\n            loading: true,\n        },\n        // SV Data\n        {\n            project_title: 'SV DATA',\n            project_text_1: '사용언어 : React, Gatsby, Styled-Components, Material-UI',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 반응형 자사의 계열사 페이지입니다. 프로젝트를 하는 과정에서 React환경에서의 퀄리티 있는 UI 구현능력을 더 키울 수 있게 되었습니다.`,\n            img: `${imgUrl}/project/project_svdata.png`,\n            link: 'http://www.sv-data.com/',\n            git: '',\n            speed: 30,\n            loading: true,\n        },\n        // SV VIBA\n        {\n            project_title: 'SV VIBA',\n            project_text_1: '사용언어 : HTML5, CSS3, Javascript, Jquery',\n            project_text_2: `[\"사용언어\"]를 이용하여 자사 홈페이지에 UI를 리뉴얼 하였습니다. 프로젝트를 하는 과정에서 UI 구현 능력을 키울 수 있었습니다`,\n            img: `${imgUrl}/project/project_svviba.png`,\n            link: 'http://www.svviba.com/',\n            git: '',\n            speed: 15,\n            loading: true,\n        },\n        // 에그플래너\n        {\n            project_title: '애그플래너',\n            project_text_1: '사용언어 : HTML5, CSS3, Javascript, Jquery',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 출강 서비스 반응형 정적페이지입니다. 프로젝트를 하는 과정에서 UI 구현 능력을 키울 수 있었습니다`,\n            img: `${imgUrl}/project/project_egg.png`,\n            link: 'https://www.eggteachers.com',\n            git: '',\n            speed: 30,\n            loading: true,\n        },\n        // 파이어니\n        {\n            project_title: 'PION',\n            project_text_1: '사용언어 : React',\n            project_text_2: `직접 이벤트페이지를 디자인하여 [\"사용언어\"]를 이용해 구현한 첫 React 이벤트 페이지입니다. 프로젝트를 하는 과정에서 React환경에서의 프로그래밍을 경험하였습니다.`,\n            img: `${imgUrl}/project/project_piony.png`,\n            link: '',\n            git: '',\n            speed: 10,\n            loading: true,\n        },\n        // 코로나맵\n        {\n            project_title: '코로나맵 클론',\n            project_text_1: '사용언어 : HTML5, CSS3, Javascript, Node.Js, Express',\n            project_text_2:\n                '[\"사용언어\"]를 이용하여 구현한 코로나맵 클론 웹 사이트 입니다. 프로젝트를 하는 과정에서 Naver지도 API와 카카오 지도 API를 이용하여 마커표시, 검색표시 등등 공용지도API를 더 유연하게 쓸 수 있게 되었습니다.',\n            img: `${imgUrl}/project/project_corona_map.png`,\n            link: '',\n            git: 'https://github.com/dev-donghyuk/corona_map_clone',\n            speed: 5,\n            loading: true,\n        },\n        {\n            project_title: '애플 클론',\n            project_text_1: '사용언어 : HTML5, CSS3, Javascript',\n            project_text_2: `[\"사용언어\"]를 이용하여 구현한 애플 인터렉티브 반응형 웹 사이트 클론입니다. 프로젝트를 하는 과정에서 더 세밀한 애니메이션처리와 스크롤 값에 따른 각 비디오의 애니메이션 처리, Canvas와 SVG를 사용해 본 프로젝트입니다.`,\n            img: `${imgUrl}/project/project_appleclone.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/apple_clone/index.html',\n            git: 'https://github.com/dev-donghyuk/apple_clone',\n            speed: 5,\n            loading: true,\n        },\n        {\n            project_title: '맥도날드',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery, Photoshop, Illustrator',\n            project_text_2: '맥도날드가 대기업임에도 불구하고 모바일 웹 페이지가 퀄리티가 낮아 직접 디자인하여 구현한 맥도날드 모바일 웹뷰 사이트입니다.',\n            img: `${imgUrl}/project/project_mcdonald.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/mcdonald/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/57_page_mcdonald(mobile)',\n            speed: 15,\n            loading: true,\n        },\n        {\n            project_title: '서브웨이',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '모바일 웹뷰 기반의  페이지를 유연하게 다루기 위해 구현한 서브웨이 모바일 웹뷰 사이트입니다.',\n            img: `${imgUrl}/project/project_subway.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/subway/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/45_page_subway(mobile)',\n            speed: 15,\n            loading: true,\n        },\n        {\n            project_title: 'CJ Hello',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '모바일 웹뷰 기반의  페이지를 유연하게 다루기 위해 구현한 CJ Hello 모바일 웹뷰 사이트입니다.',\n            img: `${imgUrl}/project/project_cj.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/cj-hello/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/46_page_cjhello(mobile)',\n            speed: 15,\n            loading: true,\n        },\n        {\n            project_title: '현대 글로비스',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 반응형 현대 글로비스 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_hyundai.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/hyundai/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/67_responsive_page_hyundai',\n            speed: 10,\n            loading: true,\n        },\n        {\n            project_title: '캐논',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 캐논 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_canon.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/canon/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/54_page_canon',\n            speed: 10,\n            loading: true,\n        },\n        {\n            project_title: '삼양식품',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 삼양식품 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_samyang.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/samyang/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/10_page_samyang',\n            speed: 10,\n            loading: true,\n        },\n        {\n            project_title: '넷마블',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery, Photoshop, Illustrator',\n            project_text_2: '넷마블이 대기업임에도 불구하고 모바일쪽에만 치우쳐져있어 웹 사이트가 퀄리티가 낮아 직접 리뉴얼 디자인 한 후, 구현한 넷마블 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_netmarble.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/netmarble/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/jquery/19_page_netmarble(direct_design)',\n            speed: 10,\n            loading: true,\n        },\n        {\n            project_title: '커핀그루나루',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 커핀그루나루 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_coffin.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/coffine-gurunaru/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/32_page_coffine-gurunaru',\n            speed: 10,\n            loading: true,\n        },\n        {\n            project_title: '도미노',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 도미노 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_domino.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/domino/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/51_page_domino',\n            speed: 5,\n            loading: true,\n        },\n        {\n            project_title: '포스코 사회공헌',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 포스코 사회공헌  웹 사이트입니다.',\n            img: `${imgUrl}/project/project_posco.png`,\n            link: `http://sn237x.cafe24.com//web/personal-project/posco/index.html`,\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/jquery/12_page_posco',\n            speed: 5,\n            loading: true,\n        },\n        {\n            project_title: '포도팟',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '애니메이션 작동원리를 이해한 후, 사용자의 스크롤이 해당 섹션에 도달하면 애니메이션 되는 웹 사이트입니다.',\n            img: `${imgUrl}/project/project_podopot.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/podopod/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/48_page_animation',\n            speed: 30,\n            loading: true,\n        },\n        {\n            project_title: '레스포삭',\n            project_text_1: '사용언어 : HTML, CSS3, Javascript, Jquery',\n            project_text_2: '정적페이지를 유연하게 다루기 위해 구현한 쇼핑몰 레스포삭  웹 사이트입니다.',\n            img: `${imgUrl}/project/project_lesposac.png`,\n            link: 'http://sn237x.cafe24.com/web/personal-project/lesportsac/index.html',\n            git: 'https://github.com/dev-donghyuk/education_certification/tree/main/css/13_lesportsac',\n            speed: 10,\n            loading: true,\n        },\n    ],\n};\n","import React, { createContext, useState } from 'react';\nimport { mainData } from 'data/main';\nimport { layoutData } from 'data/layout';\nimport { profileData } from 'data/profile';\nimport { projectData } from 'data/project';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = ({ children }) => {\n    const [state, setState] = useState({\n        isLoading: false,\n        modeDark: false,\n        // 메인\n        btn_wrap: mainData.btn_wrap,\n        // 레이아웃\n        sidebar: layoutData.nav,\n        // 프로필\n        picture_data: profileData.picture_data,\n        skill_data: profileData.skill_data,\n        history_data: profileData.history_data,\n        certificate_data: profileData.certificate_data,\n        contact_data: profileData.contact_data,\n        // 프로젝트\n        main_project_data: projectData.main_project_data,\n        sub_project_data: projectData.sub_project_data,\n    });\n    // 다크모드 전역 상태 함수\n    const modeDarkFunction = (boolen) => {\n        setState({ ...state, modeDark: boolen });\n    };\n    // 로딩 전역 상태 함수\n    const isLoadingFunction = (boolen) => {\n        setState({ ...state, isLoading: boolen });\n    };\n    return (\n        <UserContext.Provider\n            value={{\n                state,\n                modeDarkFunction,\n                isLoadingFunction,\n            }}\n        >\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserContextProvider;\n","export const theme = {\n    bg: `#fff`,\n    main: '#444',\n    black: '#000',\n    white: '#fff',\n    img_mask: '#444',\n    shadow: ' 0 3px 3px -2px  rgba(0, 0, 0, 0.2), 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12)',\n    main_bg: '#000',\n    main_color: '#9146ff',\n};\n\nexport const darkTheme = {\n    bg: '#000',\n    main: '#FFFFFF',\n    black: '#fff',\n    white: '#fff',\n    img_mask: 'none',\n    shadow: '0 0 1px 1px rgba(255, 255, 255, 0.5), 0 0 2px 0 rgba(255, 255, 255, 0.44), 0 0 2px 0 rgba(255, 255, 255, 0.45), 0 0 2px 0',\n    main_bg: '#000',\n    main_color: '#9146ff',\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst loadingLeft = keyframes`\n   0%{left:20%;}\n\t50%{left:50%;}\n\t100%{left:20%;}\n`;\nconst loadingRight = keyframes`\n   0%{left:80%;}\n\t50%{left:50%;}\n\t100%{left:80%;}\n`;\n\nconst Wrapper = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    z-index: 2500;\n    width: 100%;\n    height: 100vh;\n    background: ${(props) => props.theme.white};\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.4s;\n    &.on {\n        visibility: visible;\n        opacity: 1;\n    }\n    & > div {\n        width: 400px;\n        height: 400px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: ${(props) => props.theme.white};\n        filter: blur(10px) contrast(20);\n        & > .circle {\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            width: 70px;\n            height: 70px;\n            border-radius: 50%;\n            transform: translate(-50%, -50%);\n            background: #000;\n            &.circle_1 {\n                left: 20%;\n                animation: ${loadingLeft} 2s ease infinite;\n            }\n            &.circle_2 {\n                left: 80%;\n                animation: ${loadingRight} 2s ease infinite;\n            }\n        }\n    }\n`;\n\nexport default Wrapper;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Wrapper from './styles';\n\nconst LoadingBar = (props) => {\n    const { className } = props;\n    return (\n        <Wrapper className={className}>\n            <Grid container>\n                <Grid item className=\"circle circle_1\" />\n                <Grid item className=\"circle circle_2\" />\n            </Grid>\n        </Wrapper>\n    );\n};\n\nexport default LoadingBar;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    background: ${(props) => props.theme.main_bg};\n    transition: all 0.2s;\n    /* 메인 */\n    & .main {\n        overflow-x: hidden;\n        /* 각 섹션 */\n        & .scroll_section {\n            position: relative;\n            padding-top: 50vh;\n            color: ${(props) => props.theme.white};\n            /* 섹션 0 : 메세지 fade in/out 애니메이션 */\n            &.scroll_section_0 {\n                & h2 {\n                    position: relative;\n                    top: -10vh;\n                    z-index: 5;\n                    font-size: 3.5rem;\n                    line-height: 1.3;\n                    font-weight: bold;\n                    text-align: center;\n                }\n                background: ${(props) => props.theme.main_bg};\n            }\n            /* 섹션 1 : svg path 및 svg 로고 애니메이션 */\n            &.scroll_section_1 {\n                & h2 {\n                    position: relative;\n                    top: -10vh;\n                    z-index: 5;\n                    line-height: 1.3;\n                    font-size: 2.5rem;\n                    text-align: center;\n                    font-weight: bold;\n                }\n                /* logo svg */\n                & .logo {\n                    left: 50%;\n                    top: 50%;\n                    width: 1000vw;\n                    transform: translate(-10%, -50%);\n                }\n                /* stroke svg */\n                & .ribbon_path {\n                    left: 50%;\n                    top: 50%;\n                    min-width: 850px;\n                    transform: translate3D(-50%, -50%, 0);\n                    & svg {\n                        & path {\n                            fill: none;\n                            /* stroke: ${(props) => props.theme.black}; */\n                            stroke: ${(props) => props.theme.main_color};\n                            stroke-width: 70;\n                            stroke-linecap: round;\n                            stroke-linejoin: round;\n                            stroke-dasharray: 1401;\n                            stroke-dashoffset: 1401;\n                        }\n                    }\n                }\n            }\n            /* 섹션 2 : link button_wrap 및 밑 배경  */\n            &.scroll_section_2 {\n                position: relative;\n                width: 100%;\n                margin: 0 auto;\n                padding: 0 20px;\n                transition: all 0.4s;\n                & > .btn_wrap {\n                    width: auto;\n                    height: 100%;\n                    margin: 0 auto;\n                    & > div {\n                        display: inline-block;\n                        & button,\n                        & a {\n                            overflow: hidden;\n                            position: relative;\n                            display: inline-block;\n                            width: 100%;\n                            height: 100px;\n                            border: 4px solid ${(props) => props.theme.main_bg};\n                            border-radius: 8px;\n                            text-transform: uppercase;\n                            & em {\n                                position: absolute;\n                                left: 50%;\n                                top: 50%;\n                                z-index: 1200;\n                                transform: translate3D(-50%, -50%, 0);\n                                font-weight: bold;\n                                font-size: 24px;\n                                color: ${(props) => props.theme.main_bg};\n                                transition: 0.4s;\n                            }\n                            & span {\n                                position: absolute;\n                                z-index: 1100;\n                                width: 25%;\n                                height: 100%;\n                                border-radius: 50%;\n                                background: ${(props) => props.theme.main_bg};\n                                transition: 0.4s;\n                                transform: translateY(150%);\n                                &:nth-child(1) {\n                                    left: calc(0%);\n                                    transition-delay: calc(0.1s);\n                                }\n                                &:nth-child(2) {\n                                    left: calc(25%);\n                                    transition-delay: calc(0.2s);\n                                }\n                                &:nth-child(3) {\n                                    left: calc(50%);\n                                    transition-delay: calc(0.3s);\n                                }\n                                &:nth-child(4) {\n                                    left: calc(75%);\n                                    transition-delay: calc(0.4s);\n                                }\n                            }\n                            &:hover {\n                                & em {\n                                    color: ${(props) => props.theme.white};\n                                }\n                                & span {\n                                    transform: translateY(0) scale(2.5);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            /* scroll_section 공통 컨텐츠들 */\n            /* 이벤트 메세지 */\n            & .main_message {\n                top: 40vh;\n                font-size: 2.5rem;\n                opacity: 0;\n                &.logo_text {\n                    top: 50%;\n                    transform: translate3D(0, -50%, 0);\n                    margin-top: -28px;\n                    font-size: 3.5rem;\n                }\n                /* 메인 메세지 안에 텍스트 */\n                & p {\n                    font-weight: bold;\n                    text-align: center;\n                }\n            }\n            /* 고정 메세지 속성 */\n            & .sticky_elem {\n                display: none;\n                position: fixed;\n                /* z-index: 4; */\n                left: 0;\n                width: 100%;\n            }\n        }\n    }\n    /* 해당 애니메이션 씬일 때, 해당하는 컨텐츠 보이게 처리 */\n\n    &#show_scene_0 .scroll_section_0 .sticky_elem {\n        display: block;\n        will-change: transform, opacity;\n    }\n    &#show_scene_1 .scroll_section_1 .sticky_elem {\n        display: block;\n        will-change: transform, opacity;\n    }\n    &#show_scene_2 .scroll_section_2 .sticky_elem {\n        display: block;\n        will-change: transform, opacity;\n    }\n\n    @media (min-width: 1024px) {\n        /* 메인 */\n        & .main {\n            /* 각 섹션 */\n            & .scroll_section {\n                &.scroll_section_0 {\n                    & h2 {\n                        font-size: 7vw !important;\n                    }\n                }\n                &.scroll_section_1 {\n                    & h2 {\n                        font-size: 4vw;\n                    }\n                }\n                /* 이벤트 메세지 */\n                & .main_message {\n                    font-size: 4vw;\n                    &.logo_text {\n                        font-size: 7vw;\n                    }\n                }\n            }\n        }\n    }\n    @media (max-width: 600px) {\n        /* 메인 */\n        & .main {\n            /* 섹션 2 */\n            & .scroll_section_2 {\n                background-size: 200% !important;\n                & .btn_wrap {\n                    position: absolute;\n                    left: 50%;\n                    top: 50%;\n                    transform: translate3D(-50%, -50%, 0);\n                    max-width: 320px;\n                    width: 100% !important;\n                    height: auto !important;\n                    margin: 0 auto;\n                }\n            }\n        }\n    }\n`;\n\nexport default Wrapper;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { UserContext } from 'context';\n\nimport { Grid } from '@material-ui/core';\n// import { imgUrl } from 'config';\nimport Wrapper from './styles';\n\nconst Portpolio = () => {\n    const { state, isLoadingFunction } = useContext(UserContext);\n    const history = useHistory();\n\n    // DOM을 사용하기 위한 Ref\n    const wrapRef = useRef(null);\n\n    // 0번째 애니메이션\n    const containerRef0 = useRef(null);\n    const messageARef0 = useRef(null);\n    const messageBRef0 = useRef(null);\n    const messageCRef0 = useRef(null);\n    const messageDRef0 = useRef(null);\n\n    // 1번째 애니메이션\n    const containerRef1 = useRef(null);\n    const messageARef1 = useRef(null);\n    const messageBRef1 = useRef(null);\n    const logoRef1 = useRef(null);\n    const ribbonPathRef1 = useRef(null);\n    // 2번째\n    const containerRef2 = useRef(null);\n\n    const sceneInfo = [\n        {\n            type: 'sticky',\n            heightNum: 5,\n            scrollHeight: 0,\n            objs: {\n                container: containerRef0,\n                messageA: messageARef0,\n                messageB: messageBRef0,\n                messageC: messageCRef0,\n                messageD: messageDRef0,\n            },\n            values: {\n                // A\n                messageA_opacity_in: [0, 1, { start: 0.1, end: 0.2 }],\n                messageA_translateY_in: [20, 0, { start: 0.1, end: 0.2 }],\n                messageA_opacity_out: [1, 0, { start: 0.25, end: 0.3 }],\n                messageA_translateY_out: [0, -20, { start: 0.25, end: 0.3 }],\n                // B\n                messageB_opacity_in: [0, 1, { start: 0.3, end: 0.4 }],\n                messageB_translateY_in: [20, 0, { start: 0.3, end: 0.4 }],\n                messageB_opacity_out: [1, 0, { start: 0.45, end: 0.5 }],\n                messageB_translateY_out: [0, -20, { start: 0.45, end: 0.5 }],\n                // C\n                messageC_opacity_in: [0, 1, { start: 0.5, end: 0.6 }],\n                messageC_translateY_in: [20, 0, { start: 0.5, end: 0.6 }],\n                messageC_opacity_out: [1, 0, { start: 0.65, end: 0.7 }],\n                messageC_translateY_out: [0, -20, { start: 0.65, end: 0.7 }],\n                // D\n                messageD_opacity_in: [0, 1, { start: 0.7, end: 0.8 }],\n                messageD_translateY_in: [20, 0, { start: 0.7, end: 0.8 }],\n                messageD_opacity_out: [1, 0, { start: 0.85, end: 0.9 }],\n                messageD_translateY_out: [0, -20, { start: 0.85, end: 0.9 }],\n            },\n        },\n        {\n            type: 'sticky',\n            heightNum: 3, // 브라우저 높이의 3배로 scrollHeight 세팅\n            scrollHeight: 0,\n            objs: {\n                container: containerRef1,\n                messageA: messageARef1,\n                messageB: messageBRef1,\n                logo: logoRef1,\n                ribbonPath: ribbonPathRef1,\n            },\n            values: {\n                // 메세지A 애니메이션\n                messageA_opacity_in: [0, 1, { start: 0.1, end: 0.2 }],\n                messageA_opacity_out: [1, 0, { start: 0.3, end: 0.4 }],\n                messageA_translateY_in: [20, 0, { start: 0.1, end: 0.2 }],\n                messageA_translateY_out: [0, -20, { start: 0.3, end: 0.4 }],\n                // 메세지B 애니메이션\n                messageB_opacity_in: [0, 1, { start: 0.4, end: 0.5 }],\n                messageB_opacity_out: [1, 0, { start: 0.6, end: 0.7 }],\n                // 로고 애니메이션\n                logo_width_in: [1000, 200, { start: 0.1, end: 0.4 }],\n                logo_width_out: [200, 50, { start: 0.4, end: 0.8 }],\n                logo_translateX_in: [-10, -20, { start: 0.2, end: 0.4 }],\n                logo_translateX_out: [-20, -50, { start: 0.4, end: 0.8 }],\n                logo_opacity_out: [1, 0, { start: 0.8, end: 0.9 }],\n                // path 애니메이션\n                path_dashoffset_in: [1401, 0, { start: 0.2, end: 0.4 }],\n                path_dashoffset_out: [0, -1401, { start: 0.6, end: 0.8 }],\n            },\n        },\n        {\n            type: 'normal',\n            heightNum: 0, // 브라우저 높이의 3배로 scrollHeight 세팅\n            scrollHeight: 0,\n            objs: {\n                container: containerRef2,\n            },\n        },\n    ];\n\n    useEffect(() => {\n        isLoadingFunction(true);\n        // 메인 애니메이션\n        const wrap = wrapRef.current; // body 대용\n        let prevScrollHeight = 0; // 현재 스크롤 위치보다 이전에 위치한 스크롤 섹션들의 스크롤 높이의 합\n        let currentScene = 0; // 현제 활성화된 씬\n        let enterNewScene = false; // 씬이 변경될때 스위치\n        // 현재 스크롤 값을 yOffset에 담기\n\n        const setLayout = () => {\n            // 각 스크롤 섹션의 높이 세팅\n            for (let i = 0; i < sceneInfo.length; i += 1) {\n                if (sceneInfo[i].type === 'sticky') {\n                    sceneInfo[i].scrollHeight = sceneInfo[i].heightNum * window.innerHeight;\n                } else if (sceneInfo[i].type === 'normal') {\n                    // !!\n                    sceneInfo[i].scrollHeight = window.innerHeight;\n                }\n                sceneInfo[i].objs.container.current.style.height = `${sceneInfo[i].scrollHeight}px`;\n            }\n            // 새로고침 시 전 씬 값 세팅\n            let totalScrollHeight = 0;\n            for (let i = 0; i < sceneInfo.length; i += 1) {\n                totalScrollHeight += sceneInfo[i].scrollHeight;\n                if (totalScrollHeight >= window.pageYOffset) {\n                    currentScene = i;\n                    break;\n                }\n            }\n            wrap.setAttribute('id', `show_scene_${currentScene}`);\n        };\n\n        // 애니메이션 비율 값 계산 함수\n        const calcValues = (values, currentYOffset) => {\n            let result;\n            // 현재 씬(스크롤섹션)에서 스크롤된 범위를 비율로 구하기\n            const { scrollHeight } = sceneInfo[currentScene];\n            const scrollRatio = currentYOffset / scrollHeight;\n\n            if (values.length === 3) {\n                // start ~ end 사이에 애니메이션 실행\n                const partScrollStart = values[2].start * scrollHeight;\n                const partScrollEnd = values[2].end * scrollHeight;\n                const partScrollHeight = partScrollEnd - partScrollStart;\n\n                if (currentYOffset >= partScrollStart && currentYOffset <= partScrollEnd) {\n                    result = ((currentYOffset - partScrollStart) / partScrollHeight) * (values[1] - values[0]) + values[0];\n                } else if (currentYOffset < partScrollStart) {\n                    const value = values[0];\n                    result = value;\n                } else if (currentYOffset > partScrollEnd) {\n                    const value = values[1];\n                    result = value;\n                }\n            } else {\n                result = scrollRatio * (values[1] - values[0]) + values[0];\n            }\n\n            return result;\n        };\n\n        // 애니메이션 처리 함수\n        const playAnimation = () => {\n            const { objs } = sceneInfo[currentScene];\n            const { values } = sceneInfo[currentScene];\n            const currentYOffset = window.pageYOffset - prevScrollHeight;\n            const { scrollHeight } = sceneInfo[currentScene];\n            const scrollRatio = currentYOffset / scrollHeight;\n\n            switch (currentScene) {\n                case 0:\n                    if (scrollRatio <= 0.22) {\n                        // in\n                        objs.messageA.current.style.opacity = calcValues(values.messageA_opacity_in, currentYOffset);\n                        objs.messageA.current.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_in, currentYOffset)}%, 0)`;\n                    } else {\n                        // out\n                        objs.messageA.current.style.opacity = calcValues(values.messageA_opacity_out, currentYOffset);\n                        objs.messageA.current.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_out, currentYOffset)}%, 0)`;\n                    }\n\n                    if (scrollRatio <= 0.42) {\n                        // in\n                        objs.messageB.current.style.opacity = calcValues(values.messageB_opacity_in, currentYOffset);\n                        objs.messageB.current.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_in, currentYOffset)}%, 0)`;\n                    } else {\n                        // out\n                        objs.messageB.current.style.opacity = calcValues(values.messageB_opacity_out, currentYOffset);\n                        objs.messageB.current.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_out, currentYOffset)}%, 0)`;\n                        // 백그라운드 세팅\n                    }\n\n                    if (scrollRatio <= 0.62) {\n                        // in\n                        objs.messageC.current.style.opacity = calcValues(values.messageC_opacity_in, currentYOffset);\n                        objs.messageC.current.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_in, currentYOffset)}%, 0)`;\n                    } else {\n                        // out\n                        objs.messageC.current.style.opacity = calcValues(values.messageC_opacity_out, currentYOffset);\n                        objs.messageC.current.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_out, currentYOffset)}%, 0)`;\n                    }\n\n                    if (scrollRatio <= 0.82) {\n                        // in\n                        objs.messageD.current.style.opacity = calcValues(values.messageD_opacity_in, currentYOffset);\n                        objs.messageD.current.style.transform = `translate3d(0, ${calcValues(values.messageD_translateY_in, currentYOffset)}%, 0)`;\n                    } else {\n                        // out\n                        objs.messageD.current.style.opacity = calcValues(values.messageD_opacity_out, currentYOffset);\n                        objs.messageD.current.style.transform = `translate3d(0, ${calcValues(values.messageD_translateY_out, currentYOffset)}%, 0)`;\n                    }\n                    break;\n                case 1:\n                    if (scrollRatio > 0.2) {\n                        wrap.style.background = `#fff`;\n                    } else {\n                        wrap.style.background = `#000`;\n                    }\n                    if (scrollRatio <= 0.25) {\n                        // in\n                        objs.messageA.current.style.opacity = calcValues(values.messageA_opacity_in, currentYOffset);\n                        objs.messageA.current.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_in, currentYOffset)}%, 0)`;\n                    } else {\n                        // out\n                        objs.messageA.current.style.opacity = calcValues(values.messageA_opacity_out, currentYOffset);\n                        objs.messageA.current.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_out, currentYOffset)}%, 0)`;\n                    }\n\n                    if (scrollRatio <= 0.55) {\n                        // in\n                        objs.messageB.current.style.opacity = calcValues(values.messageB_opacity_in, currentYOffset);\n                    } else {\n                        // out\n                        objs.messageB.current.style.opacity = calcValues(values.messageB_opacity_out, currentYOffset);\n                    }\n\n                    // 크기가 커져도 깨지지 않는 SVG의 장점을 살리기 위해 transform scale 대신 width를 조정\n                    if (scrollRatio <= 0.4) {\n                        objs.logo.current.style.width = `${calcValues(values.logo_width_in, currentYOffset)}vw`;\n                        objs.logo.current.style.transform = `translate(${calcValues(values.logo_translateX_in, currentYOffset)}%, -50%)`;\n                    } else {\n                        objs.logo.current.style.width = `${calcValues(values.logo_width_out, currentYOffset)}vw`;\n                        objs.logo.current.style.transform = `translate(${calcValues(values.logo_translateX_out, currentYOffset)}%, -50%)`;\n                    }\n\n                    // 빨간 리본 패스(줄 긋기)\n                    if (scrollRatio <= 0.5) {\n                        objs.ribbonPath.current.style.strokeDashoffset = calcValues(values.path_dashoffset_in, currentYOffset);\n                    } else {\n                        objs.ribbonPath.current.style.strokeDashoffset = calcValues(values.path_dashoffset_out, currentYOffset);\n                    }\n\n                    objs.logo.current.style.opacity = calcValues(values.logo_opacity_out, currentYOffset);\n\n                    break;\n                default:\n            }\n        };\n\n        // 스크롤 시 실행될 함수\n        const scrollLoop = () => {\n            enterNewScene = false;\n            prevScrollHeight = 0;\n\n            for (let i = 0; i < currentScene; i += 1) {\n                prevScrollHeight += sceneInfo[i].scrollHeight;\n            }\n\n            //   현재 스크롤이 만약 2번이면 2번까지의 높이보다 크냐\n            if (window.pageYOffset > prevScrollHeight + sceneInfo[currentScene].scrollHeight) {\n                enterNewScene = true;\n\n                //  넘어갔으면 현재 씬 값을 ++ 해라\n                currentScene += 1;\n            }\n            //   현재 스크롤이 만약 2번이면 1번까지의 높이보다 작냐\n            if (window.pageYOffset < prevScrollHeight) {\n                enterNewScene = true;\n                //  바운스 효과로 인한 값이-1로 갈 수도 있으니\n                if (currentScene === 0) {\n                    return;\n                }\n                currentScene -= 1;\n            }\n            //   스크롤 값에 따른 currentScene이 정해졌으면 해당 currentScene의 메세지를 보여라\n            wrap.setAttribute('id', `show_scene_${currentScene}`);\n            // currentScene이 증가하거나 감소할때는 -값이 들어갈 수도 있으니 그때는 애니메이션 잠깐 멈춰라\n            if (!enterNewScene) {\n                playAnimation();\n            }\n        };\n        // 렌더되면 세팅 처리\n        setLayout();\n        // 이벤트들\n        window.addEventListener('resize', setLayout);\n        window.addEventListener('scroll', scrollLoop);\n        setTimeout(() => {\n            isLoadingFunction(false);\n        }, 2000);\n        return () => {\n            window.removeEventListener('resize', setLayout);\n            window.removeEventListener('scroll', scrollLoop);\n        };\n    }, []);\n\n    return (\n        <Wrapper ref={wrapRef}>\n            <Grid className=\"main\">\n                {/*  */}\n                <Grid ref={containerRef0} className=\"scroll_section scroll_section_0\">\n                    <h2>김동혁 포트폴리오</h2>\n                    {/* <h2>DongHyuk Portpolio</h2> */}\n                    <Grid ref={messageARef0} className=\"sticky_elem main_message\">\n                        <p>안녕하세요.</p>\n                    </Grid>\n                    <Grid ref={messageBRef0} className=\"sticky_elem main_message\">\n                        <p>새로운 웹 어플리케이션을 만들어 보고 겪으며</p>\n                    </Grid>\n                    <Grid ref={messageCRef0} className=\"sticky_elem main_message\">\n                        <p>함께 성장하고 싶어</p>\n                    </Grid>\n                    <Grid ref={messageDRef0} className=\"sticky_elem main_message\">\n                        <p>\n                            산업기능요원 보충역\n                            <br />\n                            프론트엔드 개발자로 지원한\n                        </p>\n                    </Grid>\n                </Grid>\n                {/*  */}\n                <Grid ref={containerRef1} className=\"scroll_section scroll_section_1\">\n                    <h2>김동혁입니다.</h2>\n                    <object ref={logoRef1} className=\"sticky_elem logo\" aria-label=\"logo\" data=\"/portpolio/images/name_logo.svg\" type=\"image/svg+xml\" />\n                    {/* 메세지 A */}\n                    <Grid ref={messageARef1} className=\"sticky_elem main_message\">\n                        <p>!!!</p>\n                    </Grid>\n                    {/* 메세지 끝난 후 나오는 path 이미지 */}\n                    <span className=\"sticky_elem ribbon_path\">\n                        <svg id=\"Layer_1\" className=\"path\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 700 450\">\n                            <path\n                                ref={ribbonPathRef1}\n                                className=\"stroke\"\n                                d=\"M709,41.5c-194,38-387,122-455,159c-64.13,34.89-73.4,42.42,20,26c82.5-14.5,126.34-33.68,185-38 c47.5-3.5,69.22,7.98-11,39c-75,29-251,98-459,169\"\n                            />\n                        </svg>\n                    </span>\n                    <Grid ref={messageBRef1} className=\"sticky_elem main_message logo_text\">\n                        <p>김동혁</p>\n                    </Grid>\n                </Grid>\n                {/*  */}\n                <Grid ref={containerRef2} className=\"scroll_section scroll_section_2\">\n                    <Grid container alignItems=\"center\" spacing={5} className=\"btn_wrap\">\n                        {state.btn_wrap.map((x) => (\n                            <Grid key={x.key} item xs={12} sm={4}>\n                                {x.key !== '/git' ? (\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            history.push(x.key);\n                                            window.scrollTo(0, 0);\n                                        }}\n                                    >\n                                        <span />\n                                        <span />\n                                        <span />\n                                        <span />\n                                        <em>{x.value}</em>\n                                    </button>\n                                ) : (\n                                    <a href=\"https://github.com/dev-donghyuk\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <span />\n                                        <span />\n                                        <span />\n                                        <span />\n                                        <em>{x.value}</em>\n                                    </a>\n                                )}\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Wrapper>\n    );\n};\n\nexport default Portpolio;\n","import styled from 'styled-components';\nimport { imgUrl } from 'config';\n\nconst Wrapper = styled.div`\n    /* 헤더 */\n    & .header {\n        overflow: hidden;\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 80px;\n        padding: 0 32px;\n        background: ${(props) => props.theme.bg};\n        & > div {\n            /* 로고 */\n            &.logo {\n                width: 62px;\n                height: 40px;\n                margin-top: 20px;\n                background: url('${imgUrl}/logo.svg') no-repeat;\n                text-indent: -99999px;\n                cursor: pointer;\n                &.on {\n                    background: url('${imgUrl}/logo_w.svg') no-repeat;\n                }\n            }\n            /* 네비게이션 */\n            &.nav_wrap {\n                & .nav {\n                    & > div {\n                        /* 글로벌 네비게이션 바 */\n                        &.gnb_wrap {\n                            & .gnb {\n                                height: 80px;\n                                & div {\n                                    margin-left: 24px;\n                                    & span {\n                                        color: ${(props) => props.theme.main};\n                                        font-weight: 500;\n                                        font-size: 18px;\n                                        cursor: pointer;\n                                    }\n                                }\n                            }\n                        }\n                        /* 유틸 */\n                        &.util_wrap {\n                            & .util {\n                                height: 80px;\n                                & div {\n                                    padding: 0 0 0 24px;\n                                    & button {\n                                        height: 32px;\n                                        & svg {\n                                            color: ${(props) => props.theme.main};\n                                            font-size: 32px;\n                                        }\n                                    }\n                                    & a {\n                                        display: block;\n                                        & svg {\n                                            color: ${(props) => props.theme.main};\n                                            font-size: 32px;\n                                        }\n                                        & img {\n                                            width: 32px;\n                                            height: 32px;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Wrapper;\n","import React, { useContext, useState, useCallback } from 'react';\nimport { Grid } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nimport { useHistory } from 'react-router';\nimport { UserContext } from 'context';\nimport { imgUrl } from 'config';\nimport Wrapper from './styles';\n\nconst Layout = ({ children }) => {\n    const history = useHistory();\n    const { state, modeDarkFunction } = useContext(UserContext);\n    // 다크모드 상태 값\n    const [modeDark, setModeDark] = useState(false);\n\n    const onClickLogo = useCallback(() => {\n        history.push('/');\n        window.scrollTo(0, 0);\n    }, []);\n\n    const onClickNav = useCallback(\n        (key) => () => {\n            history.push(key);\n        },\n        [],\n    );\n\n    const onClickDarkMode = useCallback(() => {\n        modeDarkFunction(!modeDark);\n        setModeDark(!modeDark);\n    }, [modeDark]);\n\n    return (\n        <Wrapper>\n            {/* 헤더 */}\n            <Grid container justify=\"space-between\" className=\"header\">\n                {/* 로고 */}\n                <Grid item className={state.modeDark ? 'logo on' : 'logo'} onClick={onClickLogo}>\n                    로고\n                </Grid>\n                {/* 네비게이션 */}\n                <Grid item className=\"nav_wrap\">\n                    <Grid container className=\"nav\">\n                        {/* 글로벌 네비게이션 바 */}\n                        <Grid item className=\"gnb_wrap\">\n                            <Grid container alignItems=\"center\" className=\"gnb\">\n                                {state.sidebar.map((x) => (\n                                    <Grid item key={x.key} onClick={onClickNav(x.key)}>\n                                        <span>{x.value}</span>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                        {/* 유틸 */}\n                        <Grid item className=\"util_wrap\">\n                            <Grid container alignItems=\"center\" className=\"util\">\n                                <Grid item>\n                                    <button type=\"button\" onClick={onClickDarkMode}>\n                                        {state.modeDark ? <Brightness7Icon /> : <Brightness4Icon />}\n                                    </button>\n                                </Grid>\n                                <Grid item>\n                                    <a href=\"https://github.com/dev-donghyuk\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <GitHubIcon />\n                                    </a>\n                                </Grid>\n                                <Grid item>\n                                    <a href=\"https://www.notion.so/Donghyuk-Kim-6585ae54500946daa55004efbdea71c6\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <img src={`${imgUrl}/notion_icon.png`} alt=\"\" />\n                                    </a>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {children}\n        </Wrapper>\n    );\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\n// 로딩 시, 보이는 스켈레톤 컴포넌트\nexport const SkeletonWrap = styled.div`\n    margin: ${(props) => props.margin};\n    padding: ${(props) => props.padding};\n`;\n\n// 각 프로젝트 이미지 영역 및 애니메이션\nexport const Mask = styled.div`\n    display: none;\n    height: ${(props) => `${props.height}`};\n    background: url(${(props) => `${props.bgUrl}`}) no-repeat center top;\n    background-size: cover;\n    transition: background-position ${(props) => props.speed}s!important;\n    &:hover {\n        background-position: center bottom;\n    }\n    &.on {\n        display: block;\n    }\n`;\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    padding: 80px 32px;\n    background: ${(props) => props.theme.bg};\n    word-break: keep-all;\n    & .project_wrap {\n        max-width: 1280px;\n        width: 100%;\n        margin: 0 auto;\n        padding: 40px 0;\n        & .project {\n            /* 각 프로젝트 아이템 공통 */\n            & .project_container {\n                & .project_item {\n                    width: 100%;\n                    padding: 32px;\n                    transition: all 0.4s;\n                    &:hover {\n                        box-shadow: ${(props) => props.theme.shadow};\n                    }\n                    & .title {\n                        padding: 24px 0;\n                        font-weight: 500;\n                        color: ${(props) => props.theme.main};\n                        & .link {\n                            display: inline-block;\n                            vertical-align: middle;\n                            &.url {\n                                margin-left: 24px;\n                            }\n                            & a {\n                                color: ${(props) => props.theme.main};\n                            }\n                        }\n                    }\n                    & .text {\n                        color: ${(props) => props.theme.main};\n                        &.text_1 {\n                            line-height: 1.3;\n                        }\n                        &.text_2 {\n                            line-height: 1.6;\n                        }\n                    }\n                }\n            }\n            /* 메인 프로젝트 */\n            &.main_project {\n                margin-bottom: 60px;\n                & .project_container {\n                    & .project_item {\n                        & .title {\n                            font-size: 36px;\n                            & .link {\n                                & svg {\n                                    width: 36px;\n                                    height: 36px;\n                                }\n                                & a {\n                                    font-size: 36px;\n                                }\n                            }\n                        }\n                        & .text {\n                            &.text_1 {\n                                font-size: 24px;\n                            }\n                            &.text_2 {\n                                margin-top: 16px;\n                            }\n                        }\n                    }\n                }\n            }\n            /* 서브 프로젝트 */\n            &.sub_project {\n                & .project_container {\n                    & .project_item {\n                        & .title {\n                            font-size: 24px;\n                            & .link {\n                                & svg {\n                                    width: 24px;\n                                    height: 24px;\n                                }\n                                & a {\n                                    font-size: 24px;\n                                }\n                            }\n                        }\n                        & .text {\n                            &.text_1 {\n                                padding-bottom: 8px;\n                            }\n                            &.text_2 {\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    @media (max-width: 960px) {\n        & .project_wrap {\n            & .project {\n                /* 각 프로젝트 아이템 공통 */\n                & .project_container {\n                    & .project_item {\n                        & .title {\n                            font-size: 24px !important;\n                        }\n                        & .text {\n                            font-size: 16px !important;\n                        }\n                    }\n                }\n                /* 메인 프로젝트 */\n                &.main_project {\n                    & .project_container {\n                        & .project_item {\n                            & .title {\n                                & .link {\n                                    & svg {\n                                        width: 24px;\n                                        height: 24px;\n                                    }\n                                    & a {\n                                        font-size: 24px;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    @media (max-width: 600px) {\n        & .project_wrap {\n            & .project {\n                & .project_container {\n                    & .project_item {\n                        padding: 16px;\n                        & .title {\n                            font-size: 20px !important;\n                            & .link {\n                                &.url {\n                                    margin-left: 16px !important;\n                                }\n                                & svg {\n                                    width: 20px !important;\n                                    height: 20px !important;\n                                }\n                                & a {\n                                    font-size: 20px !important;\n                                }\n                            }\n                        }\n                        & .text {\n                            font-size: 14px !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\nimport { Skeleton } from '@material-ui/lab';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\n\nimport BackgroundImageOnLoad from 'background-image-on-load';\n\nimport { UserContext } from 'context';\nimport Layout from 'components/layout';\nimport { Wrapper, Mask, SkeletonWrap } from './styles';\n\nconst MainProjectComponent = ({ setMainLoading }) => {\n    const { state } = useContext(UserContext);\n\n    // 메인 프로젝트 이미지\n    const [mainProjectData, setMainProjectData] = useState([]);\n\n    // 메인 프로젝트 딜레이\n    const [mainProjectDelay, setMainProjectDelay] = useState(false);\n\n    useEffect(() => {\n        setMainProjectData(state.main_project_data);\n        setTimeout(() => {\n            setMainProjectDelay(true);\n        }, 2000);\n    }, []);\n\n    return (\n        <Grid className=\"main_project project\">\n            <Grid className=\"project_container\">\n                {mainProjectData.map((x, index) => (\n                    <Grid key={x.project_title} className=\"project_item\">\n                        <Mask className={x.loading ? '' : 'on'} height=\"600px\" speed={x.speed} bgUrl={`${x.img}`}>\n                            <BackgroundImageOnLoad\n                                src={mainProjectDelay ? x.img : ''}\n                                onLoadBg={() => {\n                                    const tempData = [...mainProjectData];\n                                    tempData[index].loading = false;\n                                    setMainProjectData(tempData);\n                                    setMainLoading(false);\n                                }}\n                            />\n                        </Mask>\n                        {x.loading && (\n                            <SkeletonWrap>\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={600} />\n                            </SkeletonWrap>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap margin=\"24px 0\">\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={32} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid container justify=\"space-between\" alignItems=\"center\" className=\"title\">\n                                <Grid item>{x.project_title}</Grid>\n                                <Grid item>\n                                    {x.git !== '' && (\n                                        <Grid className=\"link git\">\n                                            <a href={x.git} target=\"blank\">\n                                                <GitHubIcon />\n                                            </a>\n                                        </Grid>\n                                    )}\n                                    {x.link !== '' && (\n                                        <Grid className=\"link url\">\n                                            <a href={x.link} target=\"blank\">\n                                                <FontAwesomeIcon icon={faLink} />\n                                            </a>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap>\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={32} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid className=\"text_1 text\">{x.project_text_1}</Grid>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap margin=\"16px 0 0 0\">\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={40} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid className=\"text_2 text\">{x.project_text_2}</Grid>\n                        )}\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n\nconst SubProjectComponent = (props) => {\n    const { mainLoading } = props;\n\n    const { state } = useContext(UserContext);\n    // 서브 프로젝트 데이터\n    const [subProjectData, setSubProjectData] = useState([]);\n\n    // 서브 프로젝트 딜레이\n    const [subProjectDelay, setSubProjectDelay] = useState(false);\n\n    useEffect(() => {\n        setSubProjectData(state.sub_project_data);\n        setTimeout(() => {\n            setSubProjectDelay(true);\n        }, 4000);\n    }, []);\n    return (\n        <Grid className=\"sub_project project\">\n            <Grid container className=\"project_container\">\n                {subProjectData.map((x, index) => (\n                    <Grid key={x.project_title} item sm={12} md={6} className=\"project_item\">\n                        <Mask className={x.loading ? '' : 'on'} height=\"300px\" speed={x.speed} bgUrl={`${x.img}`}>\n                            <BackgroundImageOnLoad\n                                src={!mainLoading && subProjectDelay ? x.img : ''}\n                                onLoadBg={() => {\n                                    const tempData = [...subProjectData];\n                                    tempData[index].loading = false;\n                                    setSubProjectData(tempData);\n                                }}\n                            />\n                        </Mask>\n                        {x.loading && (\n                            <SkeletonWrap>\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={300} />\n                            </SkeletonWrap>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap margin=\"24px 0\">\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={24} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid container justify=\"space-between\" alignItems=\"center\" className=\"title\">\n                                <Grid item>{x.project_title}</Grid>\n                                <Grid item>\n                                    {x.git !== '' && (\n                                        <Grid className=\"link git\">\n                                            <a href={x.git} target=\"blank\">\n                                                <GitHubIcon />\n                                            </a>\n                                        </Grid>\n                                    )}\n                                    {x.link !== '' && (\n                                        <Grid className=\"link url\">\n                                            <a href={x.link} target=\"blank\">\n                                                <FontAwesomeIcon icon={faLink} />\n                                            </a>\n                                        </Grid>\n                                    )}\n                                </Grid>\n                            </Grid>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap margin=\"0 0 8px 0\">\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={24} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid className=\"text_1 text\">{x.project_text_1}</Grid>\n                        )}\n                        {x.loading ? (\n                            <SkeletonWrap>\n                                <Skeleton variant=\"rect\" animation=\"wave\" height={50} />\n                            </SkeletonWrap>\n                        ) : (\n                            <Grid className=\"text_2 text\">{x.project_text_2}</Grid>\n                        )}\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n\nconst Project = () => {\n    const [mainLoading, setMainLoading] = useState(true);\n    return (\n        <Wrapper>\n            <Helmet>\n                <title>김동혁 프로젝트</title>\n            </Helmet>\n            <Layout>\n                <Grid className=\"project_wrap\">\n                    {/* 메인프로젝트 */}\n                    <MainProjectComponent setMainLoading={setMainLoading} />\n                    {/* 서브프로젝트 */}\n                    <SubProjectComponent mainLoading={mainLoading} />\n                </Grid>\n            </Layout>\n        </Wrapper>\n    );\n};\n\nexport default Project;\n","import React, { useEffect, useRef } from 'react';\n\nconst { kakao } = window;\n\nexport const MapApiComponent = () => {\n    const mapRef = useRef();\n    useEffect(() => {\n        const container = mapRef.current;\n        const options = {\n            center: new kakao.maps.LatLng(37.6047395, 127.0946629),\n            level: 3,\n        };\n\n        // 마커 좌표\n        const markerPosition = new kakao.maps.LatLng(37.6047395, 127.0946629);\n\n        // 마커\n        const marker = new kakao.maps.Marker({\n            position: markerPosition,\n        });\n        // 맵\n        const map = new kakao.maps.Map(container, options);\n        // 마커의 설명\n        const infowindow = new kakao.maps.InfoWindow({\n            content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">집</div>',\n        });\n        infowindow.open(map, marker);\n\n        marker.setMap(map);\n    }, []);\n    return (\n        <div className=\"popup\">\n            <div\n                id=\"map\"\n                ref={mapRef}\n                style={{\n                    width: '100%',\n                    height: '500px',\n                }}\n            />\n        </div>\n    );\n};\n","import styled, { css } from 'styled-components';\n// 공통 텍스트 그라디언트 CSS 변수화\nconst FnText = css`\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n`;\n\n// 스킬 애니메이션 아이템\nexport const SkillItem = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 100px;\n    height: 100px;\n    padding: 4px;\n    margin: 0 5px 10px;\n    z-index: 1;\n    transition: all 0.3s ease !important;\n    /* 스킬 아이템 */\n    & .skill_item {\n        background: #202e38;\n        padding: 10px 15px;\n        width: 100%;\n        height: 100%;\n        transition: inherit !important;\n        & > div {\n            text-align: left;\n            &.title {\n                font-size: 34px;\n                font-weight: 700;\n                margin: 0.3em 0 0;\n                transition: 0.8s ease 600ms !important;\n            }\n            &.text {\n                font-size: 12px;\n                margin-left: 2px;\n            }\n        }\n    }\n    /* 스킬 메세지 */\n    & .skill_text {\n        position: absolute;\n        left: 50%;\n        top: 80%;\n        z-index: 10;\n        transform: translateX(-50%);\n        width: 240px;\n        height: auto;\n        line-height: 1.3;\n        padding: 10px;\n        text-align: center;\n        font-size: 12px;\n        color: ${(props) => props.theme.black};\n        border-radius: 6px;\n        border: 1px solid ${(props) => props.theme.main};\n        background: ${(props) => props.theme.bg};\n        opacity: 0;\n        transition: opacity 0.3s ease 0.3s, top 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.3s !important;\n    }\n    /* 컬러 종류 */\n    &.red {\n        background: linear-gradient(to bottom right, #f953c6 0%, #b91d73 100%);\n        & > div {\n            & > div {\n                background: -webkit-linear-gradient(#f953c6, #b91d73);\n                ${FnText}\n            }\n        }\n    }\n    &.yellow {\n        background: linear-gradient(to bottom right, #f3f9a6 0%, #cbc634 100%);\n        & > div {\n            & > div {\n                background: -webkit-linear-gradient(#f3f9a6, #cbc634);\n                ${FnText}\n            }\n        }\n    }\n    &.blue {\n        background: linear-gradient(to bottom right, #00d2ff 0%, #3a7bd5 100%);\n        & > div {\n            & > div {\n                background: -webkit-linear-gradient(#00d2ff, #3a7bd5);\n                ${FnText}\n            }\n        }\n    }\n    &.green {\n        background: linear-gradient(to bottom right, #11998e 0%, #38ef7d 100%);\n        & > div {\n            & > div {\n                background: -webkit-linear-gradient(#11998e, #38ef7d);\n                ${FnText}\n            }\n        }\n    }\n    /* 호버 이벤트 */\n    &:hover {\n        transform: scale(1.12);\n        z-index: 10;\n        & .skill_item {\n            background: transparent;\n            & > div {\n                -webkit-text-fill-color: #222;\n                &.title {\n                }\n                &.text {\n                }\n            }\n        }\n        & .skill_text {\n            top: 105%;\n            opacity: 1 !important;\n        }\n    }\n    @media (max-width: 600px) {\n        & .skill_text {\n            width: 180px !important;\n        }\n    }\n`;\n\nexport const Wrapper = styled.div`\n    width: 100%;\n    height: 100vh;\n    background: ${(props) => props.theme.bg};\n    background-size: cover;\n    padding: 80px 20px 40px;\n    /* 프로필 전체 */\n    & .profile {\n        max-width: 1280px;\n        height: 100%;\n        margin: 0 auto;\n        padding: 40px 0 60px;\n        /* 프로필 공통 */\n        & > div {\n            width: 100%;\n            padding: 32px;\n            margin-bottom: 64px;\n            transition: all 0.4s;\n            & > .title {\n                text-align: center;\n                & span {\n                    position: relative;\n                    display: inline-block;\n                    padding: 24px 0;\n                    font-size: 36px;\n                    font-weight: 500;\n                    color: ${(props) => props.theme.main};\n                    text-align: center;\n                    &::before {\n                        content: '';\n                        position: absolute;\n                        left: 0;\n                        right: 0;\n                        width: 0;\n                        bottom: 0;\n                        height: 4px;\n                        background: ${(props) => props.theme.main};\n                        transition: all 0.4s;\n                    }\n                }\n            }\n            &:hover {\n                box-shadow: ${(props) => props.theme.shadow};\n            }\n            &:hover .title span::before {\n                width: 100%;\n            }\n        }\n        /* 소개 */\n        & .about_wrap {\n            & .about {\n                padding: 48px 0;\n                /* 사진 슬라이더 부분 */\n                & .picture_wrap {\n                    width: 200px;\n                    & .slide {\n                        position: relative;\n                        width: 100%;\n                        height: 250px;\n                        &.picture {\n                            & img {\n                                width: 100%;\n                                height: 100%;\n                                object-fit: cover;\n                            }\n                        }\n                        &.text {\n                            background: ${(props) => props.theme.main};\n                            & span {\n                                display: inline-block;\n                                position: absolute;\n                                left: 50%;\n                                top: 50%;\n                                width: 100%;\n                                line-height: 22px;\n                                text-align: center;\n                                font-size: 14px;\n                                color: ${(props) => props.theme.bg};\n                                transform: translate(-50%, -50%);\n                            }\n                        }\n                    }\n                }\n                & > .info {\n                    padding-left: 60px;\n                    max-width: calc(100% - 200px);\n                    & > div {\n                        padding-bottom: 40px;\n                        color: ${(props) => props.theme.black};\n                        &:last-child {\n                            padding-bottom: 0;\n                        }\n                        & .title {\n                            padding-bottom: 8px;\n                            font-size: 20px;\n                            font-weight: bold;\n                        }\n                        & .text {\n                            font-size: 18px;\n                            line-height: 26px;\n                            & b {\n                                font-weight: 500;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /* 스킬 */\n        & .skill_wrap {\n            & .skill {\n                padding: 48px 0;\n                text-align: center;\n            }\n        }\n        /* 교육 */\n        & .education_wrap {\n            & .education {\n                padding: 48px 0;\n                & > div {\n                    & > h2 {\n                        padding-bottom: 48px;\n                        font-size: 20px;\n                        font-weight: bold;\n                        color: ${(props) => props.theme.black};\n                    }\n                    & > div {\n                    }\n                    &.certificate_wrap {\n                        padding-bottom: 32px;\n                        & > div {\n                            & > div {\n                                margin: 0 16px 16px;\n                                text-align: center;\n                                color: ${(props) => props.theme.black};\n                                & .mask {\n                                    margin: 0 auto;\n                                    width: 160px;\n                                    height: 160px;\n                                    border-radius: 160px;\n                                    background: ${(props) => props.theme.img_mask};\n                                    & img {\n                                        width: 100px;\n                                        height: 100px;\n                                        margin-top: 30px;\n                                    }\n                                }\n                                & h3 {\n                                    margin-top: 16px;\n                                    font-size: 18px;\n                                    font-weight: bold;\n                                }\n                                & h4 {\n                                    margin-top: 8px;\n                                }\n                            }\n                        }\n                    }\n                    &.academy {\n                        color: ${(props) => props.theme.black};\n                        & h3 {\n                            & span {\n                                display: inline-block;\n                                font-size: 18px;\n                                line-height: 1.3;\n                                vertical-align: middle;\n                                &.icon {\n                                    margin-right: 8px;\n                                }\n                                &.text {\n                                    font-weight: 500;\n                                }\n                            }\n                        }\n                        & p {\n                            padding-top: 16px;\n                            line-height: 1.6;\n                            & span {\n                                &.icon {\n                                    margin-right: 8px;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /* 커리어 */\n        & .career_wrap {\n            & .career {\n                padding: 48px 0;\n                & > div {\n                    margin-bottom: 24px;\n                    color: ${(props) => props.theme.black};\n                    & h2 {\n                        font-size: 20px;\n                        font-weight: bold;\n                    }\n                    & ul {\n                        & li {\n                            margin-top: 16px;\n                            line-height: 1.3;\n                        }\n                    }\n                }\n            }\n        }\n        /* 문의 */\n        & .contact_wrap {\n            & .contact {\n                padding: 48px 0;\n                & .info {\n                    text-align: center;\n                    word-wrap: break-word;\n                    & > div {\n                        padding: 0 8px;\n                        & .icon {\n                            padding-bottom: 16px;\n                            &.link {\n                                cursor: pointer;\n                            }\n                            & svg {\n                                font-size: 48px;\n                                color: ${(props) => props.theme.main};\n                            }\n                            & img {\n                                width: 48px;\n                            }\n                        }\n                        & .text {\n                            word-break: break-all;\n                            font-size: 18px;\n                            color: ${(props) => props.theme.main};\n                        }\n                    }\n                }\n                & .map {\n                    margin-top: 48px;\n                }\n            }\n        }\n    }\n    @media (max-width: 600px) {\n        /* 프로필 전체 */\n        & .profile {\n            /* 소개 */\n            & .about_wrap {\n                & .about {\n                    /* 사진 슬라이더 부분 */\n                    & .picture_wrap {\n                        max-width: 200px;\n                        margin: 0 auto;\n                    }\n                    & .info {\n                        padding: 48px 0 0;\n                        max-width: 100%;\n                        width: 100%;\n                    }\n                }\n            }\n            /* 문의 */\n            & .contact_wrap {\n                & .contact {\n                    & .info {\n                        & > div {\n                            padding-bottom: 16px;\n                            &:last-child {\n                                padding-bottom: 0;\n                            }\n                            & .icon {\n                            }\n                        }\n                    }\n                    & .map {\n                        margin-top: 32px;\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React, { useContext, useCallback } from 'react';\nimport { Grid } from '@material-ui/core';\n// import { CallIcon, MailIcon, GitHubIcon, CheckCircleIcon } from '@material-ui/icons';\nimport CallIcon from '@material-ui/icons/Call';\nimport MailIcon from '@material-ui/icons/Mail';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Slider from 'react-slick';\nimport { Helmet } from 'react-helmet';\n\nimport { UserContext } from 'context';\nimport Layout from 'components/layout';\nimport { MapApiComponent } from 'common';\nimport { imgUrl } from 'config';\nimport { Wrapper, SkillItem } from './styles';\n\n// 프로필 소개 슬라이드 세팅 값\n\nconst settings = {\n    dots: false,\n    arrows: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    swipeToSlide: true,\n};\n\n// 소개 컴포넌트\n\nconst AboutComponent = () => {\n    const { state } = useContext(UserContext);\n\n    return (\n        <Grid className=\"about_wrap\">\n            <Grid className=\"title\">\n                <span>About</span>\n            </Grid>\n            <Grid container justify=\"space-between\" direction=\"row\" className=\"about\">\n                <Grid item className=\"picture_wrap\">\n                    <Slider {...settings}>\n                        <Grid className=\"slide text\">\n                            <span>\n                                프로필 사진이 궁금하시면\n                                <br />\n                                옆으로 넘겨주세요.\n                            </span>\n                        </Grid>\n                        {state.picture_data.map((x) => (\n                            <Grid key={x.key} className=\"slide picture\">\n                                <img src={`${x.value}`} alt=\"\" />\n                            </Grid>\n                        ))}\n                    </Slider>\n                </Grid>\n                <Grid item className=\"info\">\n                    {/* 이름 */}\n                    <Grid container direction=\"column\" className=\"\">\n                        <Grid item className=\"title\">\n                            # 이름\n                        </Grid>\n                        <Grid item className=\"text\">\n                            김동혁\n                        </Grid>\n                    </Grid>\n                    {/* 생년월일 */}\n                    <Grid container direction=\"column\" className=\"\">\n                        <Grid item className=\"title\">\n                            # 생년월일\n                        </Grid>\n                        <Grid item className=\"text\">\n                            1999.06.27\n                        </Grid>\n                    </Grid>\n                    {/* 간단소개 */}\n                    <Grid container direction=\"column\" className=\"\">\n                        <Grid item className=\"title\">\n                            # 간단소개\n                        </Grid>\n                        <Grid item className=\"text\">\n                            안녕하세요! <b>산업기능요원 보충역 프론트엔드 개발자</b>로 지원한 <b>김동혁</b>입니다.\n                            <br /> 저의 가장 큰&nbsp;<b>장점</b>은 호기심이 많고 적극적입니다. 궁금한 것은 귀찮을 정도로 잘 물어보고 답을 찾기 위해서라면 끝까지 쫒아 다닙니다. 항상 제가 맡은 일에{' '}\n                            <b>책임감</b>을 가지고 <b>최선</b>을 다하려고 노력합니다.\n                            <br />\n                            아직 제가 만든 웹 애플리케이션들을 사용자가 사용하고 피드백을 받아본 경험이 없습니다. <b>새로운 웹 어플리케이션</b>을 만들어 보고 겪으며 실시간으로 방대한 유저한테{' '}\n                            <b>피드백</b>을 받고 더 좋은 서비스를 만드는&nbsp;\n                            <b>프론트엔드 개발자</b>로 꼭 함께 성장하고 싶습니다. 감사합니다!\n                            <br />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\n// 스킬 컴포넌트\n\nconst SkillComponent = () => {\n    const { state } = useContext(UserContext);\n    return (\n        <Grid className=\"skill_wrap\">\n            <Grid className=\"title\">\n                <span>Ability</span>\n            </Grid>\n            <Grid className=\"skill\">\n                {state.skill_data.map((x) => (\n                    <SkillItem key={x.lang} className={x.color}>\n                        {/*  */}\n                        <Grid className=\"skill_item\">\n                            <Grid className=\"title\">{x.keyword}</Grid>\n                            <Grid className=\"text\">{x.lang}</Grid>\n                        </Grid>\n                        <Grid className=\"skill_text\">{x.explanation}</Grid>\n                    </SkillItem>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n\n// 교육 컴포넌트\n\nconst EducationComponent = () => {\n    const { state } = useContext(UserContext);\n    return (\n        <Grid className=\"education_wrap\">\n            <Grid className=\"title\">\n                <span>Education</span>\n            </Grid>\n            <Grid container className=\"education\">\n                <Grid item xs={12} className=\"certificate_wrap\">\n                    <h2># 자격증</h2>\n                    <Grid container justify=\"center\" direction=\"row\">\n                        {state.certificate_data.map((x) => (\n                            <Grid item key={x.title}>\n                                <Grid className=\"mask\">\n                                    <img src={`${x.img}`} alt=\"\" />\n                                </Grid>\n                                <h3>{x.title}</h3>\n                                <h4>{x.date}</h4>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} className=\"academy\">\n                    <h2># 교육수료</h2>\n                    <h3>\n                        <span className=\"icon\">\n                            <CheckCircleIcon />\n                        </span>\n                        <span className=\"text\">2019.04 ~ 2019.09 이젠컴퓨터학원(상봉) - 하이브리드 UIUX 웹 퍼블리셔 교육 이수</span>\n                    </h3>\n                    <p>\n                        - 기획 및 Pt -≫PowerPoint\n                        <br />\n                        - 포토샵 , 일러스트\n                        <br />\n                        - 웹표준 기반 HTML5.0 & CSS3전반, 텍스트와 하이퍼링크, 멀티미디어, 폼 태그\n                        <br />\n                        - 웹접근성 기반 Javascript & jQuery (정적, 동적, 반응형 그리드 시스템)\n                        <br />\n                        - 디자인 콘셉트 전략을 기획, 개발, 디자인하여 제작\n                        <br />- 반응형 웹사이트의 메인/서브페이지 작업, 스타일 코드 분리, 메뉴 영역 작업\n                    </p>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\n// 커리어 컴포넌트\n\nconst CareerComponent = () => {\n    const { state } = useContext(UserContext);\n    return (\n        <Grid className=\"career_wrap\">\n            <Grid className=\"title\">\n                <span>Career</span>\n            </Grid>\n            <Grid className=\"career\">\n                {state.history_data.map((x) => (\n                    <Grid key={x.years}>\n                        <h2>{x.years}</h2>\n                        <ul>\n                            {x.history.map((v) => (\n                                <li key={v}>- {v}</li>\n                            ))}\n                        </ul>\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid>\n    );\n};\n\n// 문의하기 컴포넌트\n\nconst ContactComponent = () => {\n    const { state } = useContext(UserContext);\n    const onClickLink = useCallback(\n        (link) => () => {\n            if (link) {\n                window.location.href = link;\n            }\n        },\n        [],\n    );\n    return (\n        <Grid className=\"contact_wrap\">\n            <Grid className=\"title\">\n                <span>Contact Us</span>\n            </Grid>\n            <Grid className=\"contact\">\n                <Grid container className=\"info\">\n                    {/*  */}\n                    {state.contact_data.map((x, index) => (\n                        <Grid key={x.key} item xs={12} sm={3}>\n                            <Grid className={x.link ? 'icon link' : 'icon'} onClick={onClickLink(x.link)}>\n                                {index === 0 && <CallIcon />}\n                                {index === 1 && <MailIcon />}\n                                {index === 2 && <GitHubIcon />}\n                                {index === 3 && <img src={`${imgUrl}/notion_icon.png`} alt=\"\" />}\n                            </Grid>\n                            <p className=\"text\">{x.value}</p>\n                        </Grid>\n                    ))}\n                    {/*  */}\n                </Grid>\n                <Grid className=\"map\">\n                    <MapApiComponent />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst Profile = () => (\n    <Wrapper>\n        <Layout>\n            <Grid className=\"profile\">\n                <Helmet>\n                    <title>김동혁 프로필</title>\n                </Helmet>\n                {/* About */}\n                <AboutComponent />\n                {/* Skill */}\n                <SkillComponent />\n                {/* Education */}\n                <EducationComponent />\n                {/* Career */}\n                <CareerComponent />\n                {/* Contact Us */}\n                <ContactComponent />\n            </Grid>\n        </Layout>\n    </Wrapper>\n);\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Portpolio from 'pages';\nimport Project from 'pages/project/';\nimport Profile from 'pages/profile/';\n\nconst Routes = () => {\n    const history = useHistory();\n\n    useEffect(() => {\n        // 앞으로가기,뒤로가기 감지\n        window.addEventListener('popstate', () => {\n            window.scrollTo(0, 0);\n        });\n    }, [history]);\n    return (\n        <BrowserRouter basename=\"/portpolio\">\n            <Switch>\n                {/* 메인 */}\n                <Route path=\"/\" exact component={Portpolio} />\n                {/* 프로젝트 */}\n                <Route path=\"/project\" exact component={Project} />\n                {/* 프로필 */}\n                <Route path=\"/profile\" exact component={Profile} />\n\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React, { useContext, useMemo } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { UserContext } from 'context';\nimport { darkTheme, theme } from 'theme';\nimport LoadingBar from 'components/loading-bar';\nimport Routes from './Routes';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    overflow:${(props) => `${props.overflow}`};\n    background:${(props) => `${props.theme.bg}`};\n  }\n`;\n\nconst App = () => {\n    const { state } = useContext(UserContext);\n\n    const themeMode = useMemo(() => {\n        if (state.modeDark) {\n            return darkTheme;\n        }\n        return theme;\n    }, [state.modeDark]);\n\n    const isLoading = useMemo(() => {\n        if (state.isLoading) {\n            return 'on';\n        }\n        return '';\n    }, [state.isLoading]);\n\n    const isOverflow = useMemo(() => {\n        if (state.isLoading) {\n            return 'hidden';\n        }\n        return 'visible';\n    }, [state.isLoading]);\n\n    return (\n        <ThemeProvider theme={themeMode}>\n            {/* 로딩바 */}\n            <LoadingBar className={isLoading} />\n            {/* 전역 css 접근 */}\n            <GlobalStyle overflow={isOverflow} />\n            {/* 라우트 */}\n            <Routes />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// IE11 보기 위함\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport UserContextProvider from './context';\nimport App from './App';\nimport './css/reset.css';\nimport './css/global.css';\n\n// slick\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nReactDOM.render(\n    // redux provider\n    <UserContextProvider>\n        <App />\n    </UserContextProvider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}